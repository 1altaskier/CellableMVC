@model CellableMVC.Models.User

@{
    ViewBag.Title = "View";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script type="text/javascript">
    function togglePassword() {
        const password = document.getElementById("password");
        const confirmPassword = document.getElementById("confirmPassword");
        const Password1Div = document.getElementById("Password1");
        const Password2Div = document.getElementById("Password2");

        if (password.type === "password") {
            password.type = "text";
            confirmPassword.type = "text"
            Password1Div.innerHTML = "<i class='fa fa-eye input-field' onclick='togglePassword()'></i>"
            Password2Div.innerHTML = "<i class='fa fa-eye input-field' onclick='togglePassword()'></i>"
        } else {
            password.type = "password";
            confirmPassword.type = "password"
            Password1Div.innerHTML = "<i class='fa fa-eye-slash input-field' onclick='togglePassword()'></i>"
            Password2Div.innerHTML = "<i class='fa fa-eye-slash input-field' onclick='togglePassword()'></i>"
        }
    };

    function valid_form() {
        // Custom "Forced" Validation For State
        if (document.getElementById("State").value == "") {
            document.getElementById("StateValidationMessage").innerHTML = "Please Select State";
            valid = false;
        }
        else {
            document.getElementById("StateValidationMessage").innerHTML = "";
            valid = true;
        }

        //// Custom "Forced" Validation For Payment Types
        if (document.getElementById("PaymentTypes").value == "") {
            document.getElementById("PaymentValidationMessage").innerHTML = "Please Select Payment Type";
            valid = false;
        }
        else {
            document.getElementById("PaymentValidationMessage").innerHTML = "";
            valid = true;
        }

        //// Custom "Forced" Validation For Payment User Name
        if (document.getElementById("PaymentUserName").value == "") {
            document.getElementById("PaymentUserNameValidationMessage").innerHTML = "Payment User Name is Required";
            valid = false;
        }
        else {
            document.getElementById("PaymentUserNameValidationMessage").innerHTML = "";
            valid = true;
        }

        return valid;
    }
</script>

@using (Html.BeginForm("Register", "Users", new { }))
{
    @Html.AntiForgeryToken()
    <table style="width:70%; margin-left:auto; margin-right:auto;">
        <tr>
            <td>
                <h4>Register New User</h4>
                <hr />
                <div style="text-align:center" class="text-danger">@ViewBag.Message</div>
                <table style="width:100%">
                    <tr>
                        <td style="width:10%; text-align:right; padding:10px;"> <i class="text-danger">*</i>&nbsp;User Name:</td>
                        <td style="width:20%; padding:10px;">
                            @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", autofocus = true } })
                            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                        </td>
                    </tr>
                    <tr>
                        <td style="width:10%; padding:5px; text-align:right; padding:5px;"><i class="text-danger">*</i>&nbsp;Password:</td>
                        <td style="width:20%; padding:10px;">
                            <input id="password" type="password" class="form-control" name="password">
                            <div id="Password1">
                                <i class="fa fa-eye-slash input-field" onclick="togglePassword()"></i>
                            </div>
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </td>
                    </tr>
                    <tr>
                        <td style="width:10%; padding:5px; text-align:right; padding:5px;"><i class="text-danger">*</i>&nbsp;Confirm Password:</td>
                        <td style="width:20%; padding:10px;">
                            <input id="confirmPassword" type="password" class="form-control" name="confirmPassword">
                            <div id="Password2">
                                <i class="fa fa-eye-slash input-field" onclick="togglePassword()"></i>
                            </div>
                            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                        </td>
                    </tr>
                    <tr>
                        <td style="width:10%; text-align:right; padding:10px;"><i class="text-danger">*</i>&nbsp;Payment Method:</td>
                        <td style="width:20%; padding:10px;">
                            @Html.DropDownList("PaymentTypes", null, "-- How You Get Paid --", htmlAttributes: new { @class = "form-control", onchange = "valid_form()" })
                            <div id="PaymentValidationMessage" class="text-danger"></div>
                        </td>
                    </tr>
                    <tr>
                        <td style="width:10%; text-align:right; padding:10px;"><i class="text-danger">*</i>&nbsp;Payment User Name:</td>
                        <td style="width:20%; padding:10px;">
                            <input type="text" id="PaymentUserName" name="PaymentUserName" class="form-control" onchange="valid_form()" />
                            <div id="PaymentUserNameValidationMessage" class="text-danger"></div>
                        </td>
                    </tr>
                    <tr>
                        <td style="width:10%; text-align:right; padding:10px;"><i class="text-danger">*</i>&nbsp;First Name:</td>
                        <td style="width:20%; padding:10px;">
                            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                        </td>
                    </tr>
                    <tr>
                        <td style="width:10%; text-align:right; padding:10px;"><i class="text-danger">*</i>&nbsp;Last Name:</td>
                        <td style="width:20%; padding:10px;">
                            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                        </td>
                    </tr>
                    <tr>
                        <td style="width:10%; text-align:right; padding:10px;"><i class="text-danger">*</i>&nbsp;Email:</td>
                        <td style="width:20%; padding:10px;">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </td>
                    </tr>
                    <tr>
                        <td style="width:10%; text-align:right; padding:10px;"><i class="text-danger">*</i>&nbsp;Phone Number:</td>
                        <td style="width:20%; padding:10px;">
                            @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                        </td>
                    </tr>
                    <tr>
                        <td style="width:10%; text-align:right; padding:10px;"><i class="text-danger">*</i>&nbsp;Address:</td>
                        <td style="width:20%; padding:10px;">
                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                        </td>
                    </tr>
                    <tr>
                        <td style="width:10%; text-align:right; padding:10px;">Apt/Ste #:</td>
                        <td style="width:20%; padding:10px;">
                            @Html.EditorFor(model => model.Address2, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Address2, "", new { @class = "text-danger" })
                        </td>
                    </tr>
                    <tr>
                        <td style="width:10%; text-align:right; padding:10px;"><i class="text-danger">*</i>&nbsp;City:</td>
                        <td style="width:20%; padding:10px;">
                            @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                        </td>
                    </tr>
                    <tr>
                        <td style="width:10%; text-align:right; padding:10px;"><i class="text-danger">*</i>&nbsp;State:</td>
                        <td style="width:20%; padding:10px;">
                            @Html.DropDownList("State", null, "-- Select State --", htmlAttributes: new { @class = "form-control", onchange = "valid_form()" })
                            <div id="StateValidationMessage" class="text-danger"></div>
                        </td>
                    </tr>
                    <tr>
                        <td style="width:10%; text-align:right; padding:10px;"><i class="text-danger">*</i>&nbsp;Zip:</td>
                        <td style="width:20%; padding:10px;">
                            @Html.EditorFor(model => model.Zip, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Zip, "", new { @class = "text-danger" })
                        </td>
                    </tr>
                    <tr>
                        <td style="width:10%; text-align:right; padding:10px;"></td>
                        <td style="width:20%; padding:10px;">
                            <input type="submit" value="Create" class="button" onclick="return valid_form()" />
                            <input type="reset" value="Reset" class="button" />
                        </td>
                    </tr>
                </table>
            </td>
        </tr>
    </table>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
