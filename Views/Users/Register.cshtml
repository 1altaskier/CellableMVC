@model CellableMVC.Models.User

@{
    ViewBag.Title = "View";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script type="text/javascript">
        function valid_form() {
        // Custom "Forced" Validation For State
        if (document.getElementById("States").value == "") {
            document.getElementById("StateValidationMessage").innerHTML = "Please Select State";
            valid = false;
        }
        else {
            document.getElementById("StateValidationMessage").innerHTML = "";
            valid = true;
        }

        return valid;
    }
</script>
<div style="height:50px"></div>

@using (Html.BeginForm("Register", "Users"))
{
    @Html.AntiForgeryToken()


    <table style="width:70%; margin-left:auto; margin-right:auto;">
        <tr>
            <td>
                <h4 >Register New User</h4>
                <hr />
                <div style="text-align:center"class="text-danger">@ViewBag.Message</div>
                <table style="width:100%">
                    <tr>
                        <td style="width:10%; text-align:right; padding:10px;">User Name:</td>
                        <td style="width:20%; padding:10px;">
                            @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", autofocus = true } })
                            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                        </td>
                    </tr>
                    <tr>
                        <td style="width:10%; padding:5px; text-align:right; padding:5px;">Password:</td>
                        <td style="width:20%; padding:10px;">
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </td>
                    </tr>
                    <tr>
                        <td style="width:10%; padding:5px; text-align:right; padding:5px;">Confirm Password:</td>
                        <td style="width:20%; padding:10px;">
                            @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                        </td>
                    </tr>
                    <tr>
                        <td style="width:10%; text-align:right; padding:10px;">First Name:</td>
                        <td style="width:20%; padding:10px;">
                            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                        </td>
                    </tr>
                    <tr>
                        <td style="width:10%; text-align:right; padding:10px;">Last Name:</td>
                        <td style="width:20%; padding:10px;">
                            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                        </td>
                    </tr>
                    <tr>
                        <td style="width:10%; text-align:right; padding:10px;">Email:</td>
                        <td style="width:20%; padding:10px;">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </td>
                    </tr>
                    <tr>
                        <td style="width:10%; text-align:right; padding:10px;">Phone Number:</td>
                        <td style="width:20%; padding:10px;">
                            @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                        </td>
                    </tr>
                    <tr>
                        <td style="width:10%; text-align:right; padding:10px;">Address:</td>
                        <td style="width:20%; padding:10px;">
                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                        </td>
                    </tr>
                    <tr>
                        <td style="width:10%; text-align:right; padding:10px;">Address 2:</td>
                        <td style="width:20%; padding:10px;">
                            @Html.EditorFor(model => model.Address2, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Address2, "", new { @class = "text-danger" })
                        </td>
                    </tr>
                    <tr>
                        <td style="width:10%; text-align:right; padding:10px;">City:</td>
                        <td style="width:20%; padding:10px;">
                            @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                        </td>
                    </tr>
                    <tr>
                        <td style="width:10%; text-align:right; padding:10px;">State:</td>
                        <td style="width:20%; padding:10px;">
                            @Html.DropDownList("State", null, "-- Select State --", htmlAttributes: new { @class = "form-control", onclick = "valid_form()" })
                            <div id="StateValidationMessage" class="text-danger"></div>
                        </td>
                    </tr>
                    <tr>
                        <td style="width:10%; text-align:right; padding:10px;">Zip:</td>
                        <td style="width:20%; padding:10px;">
                            @Html.EditorFor(model => model.Zip, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Zip, "", new { @class = "text-danger" })
                        </td>
                    </tr>
                    <tr>
                        <td style="width:10%; text-align:right; padding:10px;"></td>
                        <td style="width:20%; padding:10px;">
                            <input type="submit" value="Create" class="button" onclick="return valid_form()" />
                            <input type="reset" value="Reset" class="button" />
                        </td>
                    </tr>
                </table>
            </td>
        </tr>
    </table>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
